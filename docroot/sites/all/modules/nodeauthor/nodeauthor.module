<?php
// $Id: nodeauthor.module,v 1.2.2.5 2008/08/03 16:53:48 meba Exp $

/**
 * @file
 * Main file of module Nodeauthor.
 *
 * Nodeauthor module which displays additional author info.
 */

/**
 * Implementation of hook_help().
 */
function nodeauthor_help($path, $arg) {
}

/**
 * Implementation of hook_perm().
 */

function nodeauthor_perm() {
  return array("edit own info", "view author info");
}

/**
 * Implementation of hook_user().
 */
function nodeauthor_user($op, &$edit, &$account, $category = NULL) {
  if (($op == 'form') || ($op == 'register')) {
    if (user_access('edit own info', $account)) {
      $form['userinfo'] = array(
          '#type' => 'fieldset',
          '#title' => t('Additional user info'),
          '#collapsible' => TRUE,
          '#collapsed' => TRUE,
          '#weight' => 4,
          );
      $form['userinfo']['info'] = array(
          '#type' => 'textarea',
          '#title' => t('Short info'),
          '#default_value' => $account->info,
          '#description' => t('This info will be displayed in your content as "author information".')
          );
      $form['userinfo']['format'] = filter_form($account->format);
    }
  }
  return $form;
}

/**
 * Implementation of hook_menu().
 */
function nodeauthor_menu() {
  $items = array();
  $items['admin/content/nodeauthor'] = array(
      'title' => 'Nodeauthor',
      'description' => 'Modify which node types displays nodeauthor information',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('nodeauthor_admin_settings'),
      'access arguments' => array('administer site configuration'),
      );
  return $items;
}

/**
 * Implementation of hook_settings().
 */
function nodeauthor_admin_settings() {
  $types = node_get_types();
  while (list($type, $type_name)  = each($types))  {
    $options[$type] = $type_name->name;
  }

  $form['nodesettings'] = array(
      '#type' => 'fieldset',
      '#title' => t('Node type settings'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE);
  $form['nodesettings']['nodes_add_info'] = array(
      '#type' => 'checkboxes',
      '#title' => t('Content types'),
      '#default_value' => variable_get('nodes_add_info', array()),
      '#options' => $options,
      '#description' => t('Select node types, where additional user info will be displayed.'),
      );
  $form['userpictures'] = array(
      '#type' => 'fieldset',
      '#title' => t('User pictures'),
      '#collapsible' => TRUE,
      '#collapsed' => FALSE);
  $form['userpictures']['showpicture'] = array(
      '#type' => 'checkbox',
      '#title' => t('Show user pictures'),
      '#default_value' => variable_get('showpicture', 0),
      '#description' => t('Show user pictures in author information?'),
      );

  return system_settings_form($form);
}


/**
 * Implementation of hook_nodeapi().
 */
function nodeauthor_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  switch ($op) {
    case 'alter':
      if (user_access("view author info")) {
        $allowed = variable_get('nodes_add_info', array());
        if ($allowed[$node->type]) {
          $user = user_load(array('uid' => $node->uid));
          if (!empty($user->info)) {
            // Display picture if enabled
            if (variable_get('showpicture', 0) && !empty($user->picture)) {
              $picture = $user->picture;
            }
            else {
              $picture = NULL;
            }
            $path = drupal_get_path('module', 'nodeauthor');
            drupal_add_css($path .'/nodeauthor.css');
            $info = check_markup($user->info, $user->format);
            $node->body .= theme('authorinfo', $info, $picture);
          }
        }
      }
      break;
  }
}
/**
 * Implementation of hook_theme().
 */
function nodeauthor_theme() {
  return array(
      'authorinfo' => array(
        'arguments' => array('info' => NULL, 'picture' => NULL),
        ),
      );
}

/**
 * Format node author information
 *
 * @ingroup themeable
 */
function theme_authorinfo($info, $picture) {
  $output = "<div class=\"nodeauthor-info\"><span>". t("About the author") ."</span>";
  if (isset($picture)) {
    $output .= "<div class=\"nodeauthor-pic\"><img src=\"". file_create_url(check_plain($picture)) ."\" alt=\"". t("User picture") ."\" /></div>";
  }
  $output .= $info;
  $output .= '</div>';
  return $output;
}
